package main

import (
	"fmt"
)

// Функция для установки i-го бита в переменной n
func setBit(n int64, i uint, bitValue int64) int64 {
	// Создаем битовую маску для установки i-го бита
	mask := int64(1) << i

	// Если bitValue равно 1, то устанавливаем i-й бит в 1
	if bitValue == 1 {
		n |= mask
	} else {
		// Если bitValue не равно 1, то устанавливаем i-й бит в 0
		n &= ^mask
	}

	// Возвращаем обновленное значение переменной n
	return n
}

func main() {
	var n int64 = 10 // Пример исходной переменной int64
	var i uint = 2   // Устанавливаем 3-й (считая с нуля) бит

	// Выводим исходное значение переменной n
	fmt.Printf("Исходное значение: %d\n", n)

	// Устанавливаем i-й бит в 1
	n = setBit(n, i, 1)
	fmt.Printf("Установка i-го бита в 1: %d\n", n)

	// Устанавливаем i-й бит в 0
	n = setBit(n, i, 0)
	fmt.Printf("Установка i-го бита в 0: %d\n", n)
}
